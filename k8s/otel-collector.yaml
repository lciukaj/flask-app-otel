apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-conf
  labels:
    app: opentelemetry
    component: otel-collector-conf
data:
  otel-collector-config: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:
    processors:
      batch:
        timeout: 30s
        send_batch_size: 90
      # This part configures how the opentelemetry collector will process the data before sending it to AppDynamics SaaS.
      #  resource:
      #   attributes:
      #   - key: appdynamics.controller.account
      #     action: upsert
      #     value: "your-account-name"
      #   - key: appdynamics.controller.host
      #     action: upsert     
      #     value: "your-controller-host"
      #   - key: appdynamics.controller.port
      #     action: upsert
      #     value: 443
      #   - key: telemetry.sdk.language
      #     action: upsert
      #     value: "python"
    exporters:
      logging:
        loglevel: debug
      zipkin:
        endpoint: "http://zipkin-svc:9411/api/v2/spans"
        format: proto
      jaeger:
        endpoint: "jaeger-collector:14250"
        tls:
          insecure: true
      # This part configures how the opentelemetry collector will be send to AppDynamics SaaS.
      # otlphttp:
      #   tls:
      #     insecure: true 
      #   endpoint: "endpoint-name" #please check documentation to get exact endpoint name for certain SaaS controller location
      #   headers: {"x-api-key": "api-key-taken-from-app-saas"}
    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [batch]
          #if appd backend used, please comment above and uncomment below
          #processors: [batch, resource]
          exporters: [logging, jaeger, zipkin]
          #if appd backend used, please comment above and uncomment below
          #exporters: [logging, otlphttp, jaeger, zipkin]
      telemetry:
        logs:
          level: "debug"
      extensions: [zpages]     
    extensions:
      zpages:
        endpoint: 0.0.0.0:55679
---
apiVersion: v1
kind: Service
metadata:
  name: otel-collector
  labels:
    app: opentelemetry
    component: otel-collector
spec:
  ports:
  - name: otlp-grpc # Default endpoint for OpenTelemetry gRPC receiver.
    port: 4317
    protocol: TCP
    targetPort: 4317
  - name: otlp-http # Default endpoint for OpenTelemetry HTTP receiver.
    port: 4318
    protocol: TCP
    targetPort: 4318
  - name: metrics # Default endpoint for querying metrics.
    port: 8888
    protocol: TCP
    targetPort: 8888
  - name: zpages # Default endpoint for querying metrics.
    port: 55679
    protocol: TCP
    targetPort: 55679
  selector:
    component: otel-collector

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
  labels:
    app: opentelemetry
    component: otel-collector
spec:
  selector:
    matchLabels:
      app: opentelemetry
      component: otel-collector
  minReadySeconds: 5
  progressDeadlineSeconds: 120
  replicas: 1 #TODO - adjust this to your own requirements
  template:
    metadata:
      labels:
        app: opentelemetry
        component: otel-collector
    spec:
      containers:
      - command:
          - "/otelcol"
          - "--config=/conf/otel-collector-config.yaml"
        image: otel/opentelemetry-collector:0.51.0
        name: otel-collector
        resources:
          limits:
            cpu: 1
            memory: 2Gi
          requests:
            cpu: 200m
            memory: 400Mi
        ports:
        - containerPort: 55679 # Default endpoint for ZPages.
        - containerPort: 4317 # Default endpoint for OpenTelemetry gRPC receiver.
        - containerPort: 4318 # Default endpoint for OpenTelemetry HTTP receiver.
        - containerPort: 14250 # Default endpoint for Jaeger gRPC receiver.
        - containerPort: 14268 # Default endpoint for Jaeger HTTP receiver.
        - containerPort: 9411 # Default endpoint for Zipkin receiver.
        - containerPort: 8888  # Default endpoint for querying metrics.
        volumeMounts:
        - name: otel-collector-config-vol
          mountPath: /conf
#        - name: otel-collector-secrets
#          mountPath: /secrets
      volumes:
        - configMap:
            name: otel-collector-conf
            items:
              - key: otel-collector-config
                path: otel-collector-config.yaml
          name: otel-collector-config-vol
#        - secret:
#            name: otel-collector-secrets
#            items:
#              - key: cert.pem
#                path: cert.pem
#              - key: key.pem
#                path: key.pem